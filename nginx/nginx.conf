# Main context
events {
    worker_connections 1024;  # Adjust the number of connections as needed
}

http {
    # HTTP context
    server {
        listen 80;
        server_name yourdomain.com www.yourdomain.com;  # Change to your domain

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;  # Listen for HTTPS traffic
        server_name yourdomain.com www.yourdomain.com;  # Change to your domain

        ssl_certificate /etc/ssl/certs/your_certificate.crt;  # Path to your SSL certificate
        ssl_certificate_key /etc/ssl/private/your_private.key;  # Path to your SSL private key
        ssl_protocols TLSv1.2 TLSv1.3;  # Supported TLS versions
        ssl_ciphers HIGH:!aNULL:!MD5;  # Cipher suite configuration

        # Frontend configuration
        location / {
            proxy_pass http://frontend:3000;  # Forward requests to Node.js app running on port 3000
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # API configuration
        location /api {
            proxy_pass http://backend:8080;  # Forward API requests to Spring Boot backend
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
